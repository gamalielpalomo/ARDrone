#!/usr/bin/env python
import rospy
import time
from std_msgs.msg import String
from std_msgs.msg import Empty

status = "null"

def Main():
	#pub2 = rospy.Publisher('Instruction', String, queue_size=10)
	#pub2.publish("land")
	Publisher("Instruction","Header")
	time.sleep(3)
	listener()
	

def Test():
	Publisher('Instruction',"takeoff")
	time.sleep(10)
	Publisher('Instruction',"forward")
	time.sleep(0.5)
	Publisher('Instruction',"land")

def listener():
	rospy.Subscriber("Percept", String, Listen)
	rospy.Subscriber("TagInfo", String, TagListen)
	print("[INFO] Listener started")
	print "Status: "+status
	rospy.spin()

def Listen(msg):
	global status
	data = msg.data
	inputData = data.split(",")
	if inputData[0] == "Status":
		status = inputData[1]


def TagListen(data):
	inputData = data.data.split(",")
	if inputData[0] == "Si":
		if status == "Landed":
			print "Landed"
			Publisher("Instruction","takeoff")
			time.sleep(1)
		elif status == "Hovering" or status == "Flying":
			distance = float(inputData[1])
			posX = float(inputData[2])
			posY = float(inputData[3])

			if distance >150:#ESPACIO PUBLICO
				
				if posX < 400: #El objeto esta desfasado a la izquerda, mover drone a la izquierda
					Publisher("Instruction","lateral,0.025")
				elif posX >= 400 and posX < 600: #Posicion ideal, proceder a movimientos en distancia
					Publisher("Instruction","lateral,0")
					Publisher("Instruction","forward,0.05")
				else:#El objeto esta desfasado a la derecha, mover drone a la derecha
					Publisher("Instruction","lateral,-0.025")

			elif distance >50 and distance <=150:#ESPACIO PERSONAL

				if posX < 400: #El objeto esta desfasado a la izquerda, mover drone a la izquierda
					Publisher("Instruction","yaw,0.4")
				elif posX >= 400 and posX < 600: #Posicion ideal, proceder a movimientos en distancia
					Publisher("Instruction","yaw,0")
					Publisher("Instruction","forward,0.05")
				else:#El objeto esta desfasado a la derecha, mover drone a la derecha
					Publisher("Instruction","yaw,-0.4")

			else:#ESPACIO INTIMO
				Publisher("Instruction","forward,0")
				Publisher("Instruction","lateral,0")
				Publisher("Instruction","yaw,0")
	else:
		Publisher("Instruction","forward,0")
		Publisher("Instruction","lateral,0")
		Publisher("Instruction","yaw,0")

def Publisher(topic,Msg):	
	print("[PROC] Publishing: "+Msg)
	pub = rospy.Publisher(topic, String, queue_size=20)
	pub.publish(Msg)
	print("[PROC] Done")
	
def Seguimiento():
	print "[PROC] Iniciando seguimiento"
	while not status == "Hovering":
		Publisher('Instruction',"takeoff")
		time.sleep(1)
		print "[PROC] Waiting for takeoff"
	print "[PROC] Analizando imagen..."

if __name__ == '__main__':
        try:
		rospy.init_node('Procesamiento')
		#listener()
		#Seguimiento()	
		Main()     
   	except rospy.ROSInterruptException:
		pass
